name: Release and Publish

# 触发条件：推送 tag
on:
  push:
    tags:
      - 'v*.*.*'  # 匹配语义化版本标签

jobs:
  release:
    name: Build, Test and Release
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # 创建 release
      id-token: write  # NPM 发布

    steps:
      # 1. 检出代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      # 3. 安装依赖
      - name: Install dependencies
        run: npm ci

      # 4. 代码质量检查
      - name: Code quality check
        run: |
          npm run lint
          npm run type-check

      # 5. 运行测试 (测试源码)
      - name: Run tests
        run: npm test

      # 6. 构建项目
      - name: Build project
        run: npm run build

      # 7. 测试构建后的文件
      - name: Test built files
        run: |
          node -e "
          const { toCn, toNm } = require('./dist/cn-nm.cjs.js');
          console.log('✅ CJS toCn Test:', toCn(123) === '壹佰贰拾叁' ? 'PASS' : 'FAIL');
          console.log('✅ CJS toNm Test:', toNm('壹佰贰拾叁') === 123 ? 'PASS' : 'FAIL');
          console.log('✅ Build verification completed');
          "

      # 8. 获取版本信息
      - name: Get version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          TAG=${GITHUB_REF#refs/tags/}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      # 9. 创建发布包
      - name: Create release archive
        run: |
          mkdir -p release-temp
          cp -r dist package.json README.md TECHNICAL.md doc release-temp/
          cd release-temp && tar -czf ../cn-nm-${{ steps.version.outputs.tag }}.tar.gz .

      # 10. 发布到 NPM
      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: public

      # 11. 创建 GitHub Release  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "cn-nm ${{ steps.version.outputs.tag }}"
          body: |
            ## cn-nm (中文数字转换库) ${{ steps.version.outputs.tag }}

            🚀 **新版本发布！**

            ### ✨ 主要特性
            - 🔄 完整 TypeScript 重构，提供完整类型支持
            - ✅ 智能生活化逻辑验证，符合实际使用场景
            - 🧠 智能连续字符检测，区分合理和不合理的重复
            - 📦 支持 ESM/CommonJS/UMD 多格式输出
            - 🧪 100% 测试覆盖率 (50/50 测试通过)
            - 🛡️ 完整的 TypeScript 类型定义

            ### 📦 安装方式
            ```bash
            npm install cn-nm@${{ steps.version.outputs.version }}
            ```

            ### 🚀 快速使用
            ```javascript
            import { toCn, toNm } from 'cn-nm';
            
            // 数字转中文
            console.log(toCn(123)); // 壹佰贰拾叁
            
            // 中文转数字
            console.log(toNm('壹佰贰拾叁')); // 123
            ```

            ### 🔗 相关链接
            - [NPM 包](https://www.npmjs.com/package/cn-nm)
            - [GitHub 仓库](https://github.com/${{ github.repository }})
            - [技术文档](https://github.com/${{ github.repository }}/blob/master/TECHNICAL.md)

            ### 📋 发布信息
            - **提交哈希**: ${{ github.sha }}
            - **构建环境**: GitHub Actions
            - **测试状态**: ✅ 50/50 测试通过
            - **代码质量**: ✅ 零 ESLint 错误

            ---
            *通过 GitHub Actions 自动构建发布*
          files: |
            cn-nm-*.tar.gz
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-alpha') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}